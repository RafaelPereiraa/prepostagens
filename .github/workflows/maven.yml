# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      releaseVersion:
        description: "Define the release version"
        required: true
        default: ""
      developmentVersion:
        description: "Define the snapshot version"
        required: true
        default: ""
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: mvn -B package --file pom.xml
        env:
          CORREIOS_API_TOKEN: ${{ secrets.CORREIOS_API_TOKEN }}
          CORREIOS_CARTAO_POSTAGEM: ${{ secrets.CORREIOS_CARTAO_POSTAGEM }}
          CORREIOS_USER_ID: ${{ secrets.CORREIOS_USER_ID }}

      - name: Update dependency graph
        uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
  #==========================================================================================================
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17 to publish to Maven Central Repository
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: maven
          server-id: 'ossrh'
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD

      - name: Configure Git User
        run: |
          git config user.email "actions@github.com"
          git config user.name "GitHub Actions"
          echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Import GPG Key
        uses: crazy-max/ghaction-import-gpg@v5.0.0
        with:
          gpg_private_key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.MAVEN_GPG_PASSPHRASE }}

      - name: Verify Whether a Release is Ready
        id: release
        shell: bash
        run: |
          if [ "${{ github.event.inputs.releaseVersion }}" != "" ] && [ "${{ github.event.inputs.developmentVersion }}" != "" ]; then
          echo "auto_release=true" >> $GITHUB_ENV
          else
          echo "auto_release=false" >> $GITHUB_ENV
          fi

      - name: Release With Maven
        run: |
          mvn -B deploy -U -P ossrh release:prepare release:perform javadoc:jar source:jar -s settings.xml -Dgpg.passphrase=${{ secrets.MAVEN_GPG_PASSPHRASE }} -DreleaseVersion=${{ github.event.inputs.releaseVersion }} -DdevelopmentVersion=${{ github.event.inputs.developmentVersion }}
        env:
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
          AUTO_RELEASE_AFTER_CLOSE: ${{ env.auto_release }}
          CORREIOS_API_TOKEN: ${{ secrets.CORREIOS_API_TOKEN }}
          CORREIOS_CARTAO_POSTAGEM: ${{ secrets.CORREIOS_CARTAO_POSTAGEM }}
          CORREIOS_USER_ID: ${{ secrets.CORREIOS_USER_ID }}

      - name: Artifact Name
        shell: bash
        run: |
          echo "artifact_name=$(mvn org.apache.maven.plugins:maven-help-plugin:3.4.0:evaluate -Dexpression=project.build.finalName -q -DforceStdout)" >> "$GITHUB_ENV"

      - name: Define Jar Name
        shell: bash
        run: |
          echo "{{ env.artifact_name }}"
          ls -al ./target/
          mv ./target/*.*:${{ env.artifact_name }}.jar ./target/${{ env.artifact_name }}.jar

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.artifact_name }}-${{ env.sha_short }}
          path: ./target/${{ env.artifact_name }}.jar

      - name: Workflow Release Notes
        uses: peter-evans/repository-dispatch@v2
        if: ${{ github.event.inputs.releaseVersion }} != "" && ${{ github.event.inputs.developmentVersion }} != ""
        with:
          event-type: release-notes
          client-payload: '{"auto_release": "${{ env.auto_release }}", "artifact": "${{ env.artifact_name }}-${{ env.sha_short }}"}'

      - name: Set up JDK 17 to publish to GitHub Packages
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Publish to GitHub Packages
        run: mvn deploy --settings settings.xml -P github
        env:
          GITHUB_TOKEN: ${{ github.token }}
          CORREIOS_API_TOKEN: ${{ secrets.CORREIOS_API_TOKEN }}
          CORREIOS_CARTAO_POSTAGEM: ${{ secrets.CORREIOS_CARTAO_POSTAGEM }}
          CORREIOS_USER_ID: ${{ secrets.CORREIOS_USER_ID }}
